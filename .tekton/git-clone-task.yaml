apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: git-clone
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/categories: Git
    tekton.dev/pipelines.minVersion: "0.17.0"
    tekton.dev/tags: git, clone
    tekton.dev/displayName: "git clone"
    tekton.dev/platforms: "linux/amd64"
spec:
  workspaces:
    - name: output
      description: The git repository will be cloned to this workspace
  description: >-
    This task clones a git repository to the output workspace
  params:
    - name: url
      description: Git repository URL to clone
      type: string
    - name: revision
      description: Git revision (branch, tag, sha, ref, etc.) to clone
      type: string
      default: "main"
    - name: deleteExisting
      description: Delete existing contents of the workspace before cloning
      type: string
      default: "true"
  steps:
    - name: clone
      image: alpine/git:latest
      workingDir: $(workspaces.output.path)
      script: |
        #!/bin/sh
        set -e
        
        if [ "$(params.deleteExisting)" = "true" ]; then
          echo "Cleaning workspace..."
          rm -rf .git || true
          rm -rf * || true
          rm -rf .* 2>/dev/null || true
        fi
        
        echo "Cloning $(params.url) at revision $(params.revision)..."
        git clone $(params.url) .
        
        if [ "$(params.revision)" != "main" ] && [ "$(params.revision)" != "master" ]; then
          git checkout $(params.revision)
        fi
        
        echo "Successfully cloned repository"
        echo "Repository contents:"
        ls -la
