apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: flake8-lint
spec:
  description: This task will run flake8 on the provided source
  params:
    - name: source
      description: Path to the source code
      default: "."
  workspaces:
    - name: source
  steps:
    - name: lint
      image: python:3.11-slim
      workingDir: $(workspaces.source.path)
      script: |
        #!/bin/bash
        set -e
        echo "Installing flake8..."
        pip install flake8
        echo "Running flake8 linter..."
        # Exclude common directories that don't need linting
        flake8 --exclude=.git,__pycache__,htmlcov,.pytest_cache $(params.source)
        echo "Linting completed successfully"

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: pytest-env
spec:
  description: This task can be used to run pytest on a Python project
  params:
    - name: args
      description: Arguments to pass to pytest
      default: ""
  workspaces:
    - name: source
  steps:
    - name: pytest
      image: python:3.11-slim
      workingDir: $(workspaces.source.path)
      env:
        - name: DATABASE_URI
          value: "sqlite:///test.db"
      script: |
        #!/bin/bash
        set -e
        echo "Installing dependencies..."
        apt-get update && apt-get install -y gcc
        pip install --upgrade pip
        pip install -r requirements.txt
        echo "Running pytest..."
        python -m pytest $(params.args) --tb=short
        echo "Tests completed successfully"

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: behave
spec:
  description: This task can be used to run Behave BDD tests
  params:
    - name: BASE_URL
      description: The base URL of the service to test
      type: string
  workspaces:
    - name: source
  steps:
    - name: behave
      image: python:3.11-slim
      workingDir: $(workspaces.source.path)
      env:
        - name: BASE_URL
          value: $(params.BASE_URL)
        - name: DRIVER
          value: "chrome"
        - name: WAIT_SECONDS
          value: "10"
      script: |
        #!/bin/bash
        set -e
        echo "BASE_URL is set to: $BASE_URL"
        echo "Installing system dependencies..."
        apt-get update && apt-get install -y \
          gcc \
          wget \
          gnupg \
          unzip \
          curl
        
        # Install Chrome for headless testing
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list
        apt-get update && apt-get install -y google-chrome-stable
        
        # Install ChromeDriver
        CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+')
        wget -O /tmp/chromedriver.zip "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION%.*}/chromedriver_linux64.zip"
        unzip /tmp/chromedriver.zip -d /usr/local/bin/
        chmod +x /usr/local/bin/chromedriver
        
        echo "Installing Python dependencies..."
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install behave requests selenium
        
        echo "Running Behave tests..."
        behave --no-capture
        echo "BDD tests completed successfully"

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: deploy-image
spec:
  description: This task will update the deployment with the new image
  params:
    - name: deployment-name
      description: The name of the deployment
    - name: image-url
      description: The fully qualified image name
  workspaces:
    - name: source
  steps:
    - name: deploy
      image: quay.io/openshift/origin-cli:latest
      workingDir: $(workspaces.source.path)
      script: |
        #!/bin/bash
        set -e
        echo "Updating deployment $(params.deployment-name) with image $(params.image-url)"
        oc set image deployment/$(params.deployment-name) $(params.deployment-name)=$(params.image-url)
        oc rollout status deployment/$(params.deployment-name)
        echo "Deployment updated successfully"
